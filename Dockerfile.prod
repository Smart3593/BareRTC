# Multi-stage build for production
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache make bash git nodejs npm

WORKDIR /app

# Copy dependency files
COPY go.mod go.sum ./
RUN go mod download

COPY package.json package-lock.json ./
RUN npm ci --only=production

# Copy source code
COPY . .

# Build the application
RUN npm run build
RUN make build

# Production stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1001 -S barertc && \
    adduser -u 1001 -S barertc -G barertc

WORKDIR /app

# Copy built application from builder stage
COPY --from=builder /app/BareRTC .
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/settings.toml .

# Create necessary directories
RUN mkdir -p logs && \
    chown -R barertc:barertc /app

# Switch to non-root user
USER barertc

# Expose port
EXPOSE 9000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:9000/ || exit 1

# Run the application
CMD ["./BareRTC", "-address", ":9000"] 